using System;

namespace Tonberry.Core;

internal static class Resources
{
    public static string[] CommitOrder = ["feat", "fix", "perf", "test", "docs", "refactor", "style", "revert", "build", "ci", "chore"];

    public const StringComparison StrCompare = StringComparison.OrdinalIgnoreCase;

    public const string Breaking = "BREAKING CHANGE: ";

    public const string ChangelogFile = "CHANGELOG.md";

    public const string ChangelogHeader = "All commits to this project are documented in this file by [tonberry](https://github.com/ashscodes/tonberry)! Please do not edit this file or remove this header.";

    public const string ChangelogNotFound = "The main Changelog for this repository was not found. Was the current command executed from the root folder of the project where 'CHANGELOG.md' is located?";

    public const string CommitCloses = "closes #{0}";

    public const string CommitPreview = "[Preview] {0} [{1}:{2}] '{3}'";

    public const string CommitResolves = "resolves {0}";

    public const string ConfigFileExists = "The configuration file already exists and '-o|--overwrite' was not specified.";

    public const string ConfigNotLoaded = "No configuration was loaded. To use any of the TonberryCommand methods, please pass a valid TonberryConfiguration.";

    public const string InitCommand = "tonberry init";

    public const string InvalidCommitMessage = "A new commit message requires a type and short message describing the changes. Please specify a value for 'commitMessage' and 'type'.";

    public const string InvalidEnumType = "The value provided '{0}' is not valid. The following values are available: {1}.";

    public const string MarkdownBreakingChangeHeader = ":warning: BREAKING CHANGES";

    public const string MarkdownBreaking = "> * **{0}**: {1} ({2})";

    public const string MarkdownBreakingNoScope = "> * {0} ({1})";

    public const string MarkdownCommit = "* **{0}**: {1} ({2})";

    public const string MarkdownCommitNoScope = "* {0} ({1})";

    public const string MarkdownContributorCommit = "* {0} - ({1})";

    public const string MarkdownContributorEmoji = ":clap:";

    public const string MarkdownContributorThanks = "This release was contributed to by the following amazing people. A huge thank to all of you!";

    public const string MarkdownContributorTitle = "Contributors";

    public const string MarkdownHeader = "{0} {1}{2}";

    public const string MarkdownLink = "[{0}]({1})";

    public const string MarkdownReleaseHeader = "{0} {1}{2} ({3})";

    public const string MonoRepoPathExample = "src/path/to/project/folder";

    public const string NoCommitsFound = "The current branch '[{0}] {1}' has no new commits. Please make a new commit or pull any new changes.";

    public const string NoPreviewRequested = "The temporary log file for project '{0}' was lost. If you have received this error, please check you have enough drive space and no other processes have cleared your temp files.";

    public const string NoProjectsDefined = "No individual projects were specified for the monorepo in the root configuration.";

    public const string NoRepositoryFound = "The path defined contained no git repository.";

    public const string NoStagedFiles = "The specified git repository has no staged files. If you intended to stage all files, please specify 'true' for the parameter \"stageAll\".";

    public const string NoTagsFound = "The tag collection contained no tags from the current repository.";

    public const string ObjectNotFound = "{0} could not be found or was out of range.";

    public const string ProjectChangelogFile = "CHANGELOG_{0}.md";

    public const string RemoteBranchIsNotTracked = "The current branch is not tracked by the remote repository and 'createRemoteBranch' has explicitly set to 'false'. Commit has not been pushed.";

    public const string RootConfigNotFound = "The root tonberry config file could not be found in the current/specified directory or was unreadable. You can generate a new config with 'tonberry init'.";

    public const string SingleProjectTagName = "Tonberry.SingleProject.Repository";

    public const string StringIsNullOrEmpty = "The value for '{0}' is required, but was null or empty.";

    public const string TonberryProjectConfig = "{0}.tonberry.config.yml";

    public const string TonberryRootConfig = "tonberry.config.yml";

    public const string TonberryTag = "v{0}";

    public const string TonberryMonoRepoTag = "v{0}/#/{1}";

    public const string TonberryWriteError = "Tried to write the changelog for project {0} and received the following error {1}.";
}